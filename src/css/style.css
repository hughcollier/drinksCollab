/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
  margin-block-start: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  margin: 0;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

main {
  overflow: hidden;
}

body {
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  font-style: normal;
  color: #26144d;
}

h1,
h2,
h3,
h4,
h5 {
  margin-bottom: 0.5em;
}

.content-grid {
  display: grid;
  grid-template-columns: [full-width-start] 1fr [content-start] minmax(250px, 1600px) [content-end] 1fr [full-width-end];
}

.content-grid > * {
  grid-column: content;
}

.content-grid > .full-width {
  grid-column: full-width;
}

p {
  width: 95%;
  margin: 0 auto;
  text-align: center;
  position: relative;
  font-size: 1.25rem;
}

@media (min-width: 65em) {
  p {
    width: 60%;
  }
}
.purple {
  background-color: #b57aff;
}

#hero {
  height: 100vh;
  background-color: #b57aff;
  place-content: center;
  justify-items: center;
}
#hero h1 {
  color: #b57aff;
  -webkit-text-stroke: 4px #26144d;
  font-size: clamp(5rem, 8vw, 7.5rem);
  text-align: center;
  text-transform: uppercase;
}
#hero h1 span {
  display: inline-block;
}
#hero h1 .solid-white {
  -webkit-text-stroke: 0px;
  color: white;
}
#hero h1 .solid-black {
  -webkit-text-stroke: 0px;
  color: #26144d;
}

#intro .three-drinks {
  width: 70%;
  margin: 0 auto;
  position: relative;
}
#intro p {
  font-size: 1.875rem;
  margin: 5em auto;
}

#cta {
  height: 50vh;
  background-color: #b57aff;
}

#why-work-with-us {
  text-align: center;
  padding: 2em;
  margin-top: 200px;
}

#services {
  min-height: 100vh;
  display: grid;
  grid-template-columns: 1fr 1fr;
}
#services h2 {
  font-size: 2.8125rem;
  text-transform: uppercase;
}
#services p {
  font-size: 1.25rem;
  margin-bottom: 1em;
}
#services a {
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-thickness: 0.2em;
  text-decoration-color: #b57aff;
  text-underline-offset: 0.2em;
  transition: all ease 0.25s;
  font-weight: 400;
}
#services a:hover {
  font-weight: 700;
}

#left div {
  min-height: 100vh;
  display: grid;
  place-content: center;
  justify-items: center;
}
#left div > * {
  width: 70%;
}
#left div p {
  text-align: left;
}

#right {
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  align-items: center;
  justify-items: center;
}
#right .service-icons {
  position: relative;
  width: 80%;
  aspect-ratio: 1;
  grid-row: 1/2;
  grid-column: 1/2;
  overflow: hidden;
}
#right .service-icons .icon {
  position: absolute;
}

#image-section {
  background-color: #b57aff;
  margin-top: 250px;
}
#image-section ul {
  list-style: none;
  display: flex;
  padding: 0;
  gap: 2em;
  transform: scale(1.1);
}
#image-section li {
  position: relative;
}
#image-section li img {
  box-shadow: #26144d -7px 7px 0px -2px;
}
#image-section li:nth-child(odd) {
  top: -4em;
}
#image-section li:nth-child(even) {
  top: 4em;
}
#image-section h2 {
  text-align: center;
  margin-top: 8em;
  font-size: 2.5rem;
}
#image-section p {
  margin-bottom: 1em;
}
#image-section form {
  margin: 0 auto;
  padding-top: 100px;
  width: 100%;
  max-width: 500px;
}
#image-section form p {
  text-align: left;
  width: 100%;
}
#image-section form .form-field-label {
  display: none;
}
#image-section form input,
#image-section form textarea {
  width: 100%;
  background-color: color-mix(in oklab, #b57aff 80%, #26144d);
  border: none;
  padding: 10px;
  color: white;
  border: 2px solid color-mix(in oklab, #b57aff 80%, #26144d);
  border-radius: 10px;
}
#image-section form input:focus,
#image-section form textarea:focus {
  outline: none;
  border: solid 2px #26144d;
}
#image-section form input::-moz-placeholder, #image-section form textarea::-moz-placeholder {
  opacity: 0.8;
}
#image-section form input::placeholder,
#image-section form textarea::placeholder {
  opacity: 0.8;
}
#image-section .lets-go-image {
  width: 110vw;
  max-width: 110vw;
  margin: 0 auto;
}
#image-section #motion-path {
  width: 5vw;
  margin: 40vw auto 0 auto;
}
@media (min-width: 65em) {
  #image-section .lets-go-image {
    width: 75vw;
    margin: 0 auto;
  }
  #image-section #motion-path {
    width: 5vw;
  }
}

/*# sourceMappingURL=data:application/json;base64, */